{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movie","getMovies","a","axios","get","movies","data","setState","this","medium_cover_image","React","Component","About","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VAyCeA,MApCf,YAAuD,IAAtCC,EAAqC,EAArCA,GAAGC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAC5C,OACE,yBAAKC,UAAU,SACb,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CACLR,OACAC,QACAC,UACAC,SACAC,YAIJ,yBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACvC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBAAiBD,EAAOO,KAAI,SAACC,EAAMC,GAAP,OACtC,wBAAIC,IAAKD,EAAOR,UAAU,iBAAiBO,OAC/C,uBAAGP,UAAU,kBAAkBH,EAAQa,MAAM,EAAE,KAA/C,WC+BOC,G,kNAlDbR,MAAQ,CACNS,WAAW,EACXC,MAAO,I,EAITC,U,sBAAY,8BAAAC,EAAA,sEAKDC,IAAMC,IAAI,4DALT,gBAGCC,EAHD,EAERC,KACEA,KAAOD,OAIR,EAAKE,SAAS,CAACF,SAAQN,WAAW,IAP3B,2C,kEAYVS,KAAKP,c,+BAEG,IAAD,EACuBO,KAAKlB,MAA3BS,EADD,EACCA,UAAWM,EADZ,EACYA,OACnB,OAEE,6BAASlB,UAAU,aAChBY,EACG,yBAAKZ,UAAU,UACf,0BAAMA,UAAU,gBAAhB,eAGA,yBAAKA,UAAU,UACZkB,EAAOZ,KAAI,SAAAO,GAAK,OAEf,kBAAC,EAAD,CACEJ,IAAKI,EAAMnB,GACXA,GAAImB,EAAMnB,GACVC,KAAMkB,EAAMlB,KACZC,MAAOiB,EAAMjB,MACbC,QAASgB,EAAMhB,QACfC,OAAQe,EAAMS,mBACdvB,OAAQc,EAAMd,kB,GAzCbwB,IAAMC,YCQVC,MAXf,WACE,OACE,yBAAKzB,UAAU,oBACb,mIAGA,wDCWS0B,E,kLAfO,IAAD,EACQL,KAAKM,MAAxBC,EADW,EACXA,SAAUC,EADC,EACDA,aACIC,IAAjBF,EAASzB,OACV0B,EAAQE,KAAK,O,+BAGR,IACDH,EAAYP,KAAKM,MAAjBC,SACN,OAAGA,EAASzB,MACL,8BAAOyB,EAASzB,MAAMP,OAEpB,S,GAZQ2B,IAAMC,W,MCSZQ,MATf,WACE,OACA,yBAAKhC,UAAU,OACX,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCcSgC,MAff,WACE,OAKA,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWzB,IACxC,kBAAC,IAAD,CAAOuB,KAAK,SAASE,UAAWX,IAChC,kBAAC,IAAD,CAAOS,KAAK,aAAaE,UAAWV,MCXxCW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2bb795e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id,year,title,summary,poster,genres}){\r\n  return(\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres\r\n          }\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title}/>\r\n      <div className=\"movie__date\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">{genres.map((genre,index) =>(\r\n            <li key={index} className=\"genres__genre\">{genre}</li>))}</ul>\r\n        <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n      </div>\r\n    </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport \"./Home.css\";\r\n\r\n\r\nclass Home extends React.Component{\r\n  state = {\r\n    isLoading: true,\r\n    movie: []\r\n  };\r\n//axios.get은 느리다 즉, componentDidMount가 끝날때까지 시간이 좀 걸린다.\r\n// async 써줘야 await사용 가능(비동기 처리 패턴)\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: {movies}\r\n      }\r\n    }= await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    // this.setState({movies:movies}) setState의 movie와 axios의 movies\r\n       this.setState({movies, isLoading: false})\r\n    \r\n  };\r\n\r\n  componentDidMount(){ //페이지 시작후 동작\r\n    this.getMovies();\r\n  }\r\n  render() {\r\n    const { isLoading, movies } = this.state;  // 아래에 isLoading을 this.state.isLoading으로 매번 적지 않기 위해서\r\n    return (\r\n      //자바스크립트의 클래스와 component class의 차이를 구분하기 위해 자바스크립트의 클래스는 classname으로 하자\r\n      <section className=\"container\">\r\n        {isLoading\r\n          ? <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n          : (\r\n            <div className=\"movies\">\r\n              {movies.map(movie => (\r\n\r\n                <Movie\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  year={movie.year}\r\n                  title={movie.title}\r\n                  summary={movie.summary}\r\n                  poster={movie.medium_cover_image}\r\n                  genres={movie.genres}\r\n                  />\r\n              ))}\r\n            </div>\r\n          )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n// import { func } from \"prop-types\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        \"Freedom is the freedom to say that two plus two make four. If that i granted, all else follows.\"\r\n       </span>\r\n      <span>-George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\n\r\n\r\nclass Detail extends React.Component{\r\n  componentDidMount(){\r\n    const{location, history}=this.props;\r\n    if(location.state===undefined){\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  render(){\r\n    const{location} = this.props;\r\n    if(location.state){\r\n    return <span>{location.state.title}</span>;\r\n    }else{\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport default Detail;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation(){\r\n  return (\r\n  <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from './components/Navigation';\n\nfunction App(){\n  return( \n    //path 경로로 component의 내용을 랜더링\n    //exact={true}는 해당 하는 것만 랜더링 하겠다는 것. 없으면 아래의 about까지 출력된다.\n    //Link를 사용하면 Router안에 넣어줘야 한다.(navigation에 link사용)\n    //Link 의 to와 Route의 path가 같아야 연결된다.\n  <HashRouter>\n    <Navigation/>\n    <Route path=\"/\" exact={true} component={Home} />\n    <Route path=\"/about\" component={About}/>\n    <Route path=\"/movie/:id\" component={Detail}/>\n  </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n/*react application은 한번에 하나의 component만 redering 가능*/\nReactDOM.render(\n  <React.StrictMode>\n    <App />     \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}